com.snackbar.cooking.infrastructure.gateways.OrderEntityMapperCooking#toEntity(Lcom/snackbar/cooking/domain/entity/Order;)Lcom/snackbar/cooking/infrastructure/persistence/OrderEntityCooking;
false
27a43c1461428172bc22ee94d55150c7
com.snackbar.cooking.domain.entity.Order#id()Ljava/lang/String;
com.snackbar.cooking.domain.entity.Order#items()Ljava/util/List;
com.snackbar.cooking.domain.entity.Order#name()Ljava/lang/String;
com.snackbar.cooking.domain.entity.Order#orderDateTime()Ljava/time/LocalDateTime;
com.snackbar.cooking.domain.entity.Order#orderNumber()Ljava/lang/String;
com.snackbar.cooking.domain.entity.Order#remainingWaitingTime()Ljava/lang/Integer;
com.snackbar.cooking.domain.entity.Order#statusOrder()Ljava/lang/String;
com.snackbar.cooking.domain.entity.Order#waitingTime()Ljava/lang/Integer;
com.snackbar.cooking.infrastructure.persistence.OrderEntityCooking#<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/LocalDateTime;Ljava/util/List;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;)V
com.snackbar.cooking.infrastructure.persistence.OrderEntityCooking#instance-init#
java.util.stream.Collectors#toList()Ljava/util/stream/Collector;
==
collect java.util.stream.Stream#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
map java.util.stream.Stream#map(Ljava/util/function/Function;)Ljava/util/stream/Stream;
stream java.util.Collection#stream()Ljava/util/stream/Stream;