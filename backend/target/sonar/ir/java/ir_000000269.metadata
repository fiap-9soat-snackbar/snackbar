com.snackbar.checkout.usecase.CheckoutOrderUseCaseImpl#checkout(Ljava/lang/String;)Lcom/snackbar/orderRefactory/domain/entity/Order;
false
9f12e8aee5b1060377322d8a98ff0989
com.snackbar.basket.domain.entity.Basket#cpf()Ljava/lang/String;
com.snackbar.basket.domain.entity.Basket#items()Ljava/util/List;
com.snackbar.basket.domain.entity.Basket#totalPrice()Ljava/math/BigDecimal;
com.snackbar.orderRefactory.domain.entity.Order#instance-init#
java.util.stream.Collectors#toList()Ljava/util/stream/Collector;
==
collect java.util.stream.Stream#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
createOrder com.snackbar.orderRefactory.application.usecases.OrderUseCase#createOrder(Lcom/snackbar/orderRefactory/domain/entity/Order;)Lcom/snackbar/orderRefactory/domain/entity/Order;
findBasket com.snackbar.basket.application.usecases.BasketUseCase#findBasket(Ljava/lang/String;)Lcom/snackbar/basket/domain/entity/Basket;
map java.util.stream.Stream#map(Ljava/util/function/Function;)Ljava/util/stream/Stream;
setCpf com.snackbar.orderRefactory.domain.entity.Order#setCpf(Ljava/lang/String;)V
setItems com.snackbar.orderRefactory.domain.entity.Order#setItems(Ljava/util/List;)V
setPaymentMethod com.snackbar.orderRefactory.domain.entity.Order#setPaymentMethod(Ljava/lang/String;)V
setStatusOrder com.snackbar.orderRefactory.domain.entity.Order#setStatusOrder(Lcom/snackbar/orderRefactory/domain/valueobject/StatusOrder;)V
setTotalPrice com.snackbar.orderRefactory.domain.entity.Order#setTotalPrice(Ljava/math/BigDecimal;)V
stream java.util.Collection#stream()Ljava/util/stream/Stream;