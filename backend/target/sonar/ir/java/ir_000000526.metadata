com.snackbar.orderRefactory.application.usecases.OrderUseCase#updateOrder(Lcom/snackbar/orderRefactory/domain/entity/Order;)Lcom/snackbar/orderRefactory/domain/entity/Order;
false
f59a83c308d79dbb52b3ef408906093a
java.util.Optional#orElseThrow(Ljava/util/function/Supplier;)Ljava/lang/Object;
java.util.stream.Collectors#toList()Ljava/util/stream/Collector;
==
collect java.util.stream.Stream#collect(Ljava/util/stream/Collector;)Ljava/lang/Object;
findOrderById com.snackbar.orderRefactory.application.gateways.OrderGateway#findOrderById(Ljava/lang/String;)Ljava/util/Optional;
getId com.snackbar.orderRefactory.domain.entity.Order#getId()Ljava/lang/String;
getItems com.snackbar.orderRefactory.domain.entity.Order#getItems()Ljava/util/List;
map java.util.stream.Stream#map(Ljava/util/function/Function;)Ljava/util/stream/Stream;
reduce java.util.stream.Stream#reduce(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;
setItems com.snackbar.orderRefactory.domain.entity.Order#setItems(Ljava/util/List;)V
setTotalPrice com.snackbar.orderRefactory.domain.entity.Order#setTotalPrice(Ljava/math/BigDecimal;)V
stream java.util.Collection#stream()Ljava/util/stream/Stream;
updateOrder com.snackbar.orderRefactory.application.gateways.OrderGateway#updateOrder(Lcom/snackbar/orderRefactory/domain/entity/Order;)Lcom/snackbar/orderRefactory/domain/entity/Order;